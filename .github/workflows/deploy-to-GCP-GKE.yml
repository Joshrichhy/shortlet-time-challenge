name: deployment to GCP GKE

on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
        run: mvn -B clean package -DskipTests



      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: <your-gcp-project-id>
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true


      - name: Get GKE credentials
        run: gcloud container clusters get-credentials gke-cluster --zone us-central1

      - name: Set up kubeconfig for Terraform
        run: |
          mkdir -p ~/.kube
          gcloud container clusters get-credentials gke-cluster --zone us-central1 --project ${{ secrets.GCP_PROJECT_ID }}
          echo "KUBECONFIG generated"

      - name: Authenticate Docker to Google Container Registry
        run: gcloud auth configure-docker

      - name: Build and Push Docker Image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/time-api:latest .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/time-api:latest

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform
        run: terraform apply -auto-approve

      - name: Verify Deployment
        run: |
          IP=$(terraform output -raw service_ip)
          curl -f http://$IP/time



# name: Deploy to GKE

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Google Cloud SDK
#       uses: google-github-actions/setup-gcloud@v0.4.0
#       with:
#         service_account_key: ${{ secrets.GCP_SA_KEY }}
#         project_id: ${{ secrets.GCP_PROJECT_ID }}

#     - name: Authenticate Docker to Google Container Registry
#       run: gcloud auth configure-docker

#     - name: Build Docker image
#       run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/time-api:latest .

#     - name: Push Docker image to Google Container Registry
#       run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/time-api:latest

#     - name: Terraform Init
#       run: terraform init

#     - name: Terraform Apply
#       run: terraform apply -auto-approve

#     - name: Verify Deployment
#       run: |
#         IP=$(terraform output -raw service_ip)
#         curl -f http://$IP/time
